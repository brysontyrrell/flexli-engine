AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:

  LogLevel:
    Type: String

  SharedLayerArn:
    Type: String

  MainTableName:
    Type: String

  MainTableEventBusName:
    Type: String

  RunQueueName:
    Type: String

  RunQueueUrl:
    Type: String

Globals:

  Function:
    Architectures:
      - arm64
    Runtime: python3.10
    MemorySize: 256
    Timeout: 900
    Handler: app.lambda_handler
    Tracing: Active
    Layers:
      - !Ref SharedLayerArn
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel
        MAIN_TABLE_NAME: !Ref MainTableName
        RUN_QUEUE_ARN: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${RunQueueName}
        SCHEDULER_ROLE_ARN: !GetAtt SchedulerRole.Arn

Resources:

# Scenarios:
  # 1. New Workflow -> Automatically is release version, and is enabled
    # 1a. Release Version contains Schedule source -> create schedule
  # 2. Promoted Workflow Version -> There will be two events
    # 2a. MODIFIED Workflow Version - is_release changed to False (delete old schedule)
    # 2b. MODIFIED Workflow Version - is_release changed to True (create new schedule)
  # 3. Workflow Version Deleted -> If it was the release version the schedule must be deleted (delete)
  # 4. Workflow Disabled -> is_release is True, and enabled -> disabled (delete schedule)
  # 4. Workflow Enabled -> is_release is True, and disabled -> enabled (create schedule)

  DeleteReleaseVersionV1:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${AWS::StackName}-DeleteReleaseVersionV1
      Type: EXPRESS
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MainTableName
      DefinitionSubstitutions:
        MainTableName: !Ref MainTableName
      Definition:
        StartAt: DeleteReleaseVersion
        States:
          DeleteReleaseVersion:
            Type: Task
            Resource: arn:aws:states:::dynamodb:deleteItem
            Parameters:
              TableName: ${MainTableName}
              Key:
                pk:
                  S.$: $.dynamodb.OldImage.pk.S
                sk:
                  S: R
            End: true
      Events:
        removed:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - REMOVE
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  OldImage:
                    _item_type:
                      S:
                        - WorkflowVersion
                    is_release_version:
                      BOOL:
                        - true

  SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SqsSendMessagePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sqs:SendMessage
                Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${RunQueueName}

  CreateScheduleV1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./create_schedule_v1
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - scheduler:CreateSchedule
              Resource: !Sub 'arn:aws:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/*/*'
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: !GetAtt SchedulerRole.Arn
      Events:
        created:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - INSERT
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  NewImage:
                    _item_type:
                      S:
                        - 'WorkflowReleaseVersion'
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - true
        added:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - MODIFY
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  NewImage:
                    _item_type:
                      S:
                        - 'WorkflowReleaseVersion'
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - true
                  OldImage:
                    source:
                      M:
                        connector_type:
                          S:
                            - anything-but: 'Flexli:CoreV1:Schedule'
        enabled:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - MODIFY
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  NewImage:
                    _item_type:
                      S:
                        - 'WorkflowReleaseVersion'
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - true
                  OldImage:
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - false

  CreateScheduleV1Logs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateScheduleV1}
      RetentionInDays: 30

  UpdateScheduleV1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./update_schedule_v1
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - scheduler:UpdateSchedule
              Resource: !Sub 'arn:aws:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/*/*'
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: !GetAtt SchedulerRole.Arn
      Events:
        modified:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - MODIFY
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  NewImage:
                    _item_type:
                      S:
                        - 'WorkflowReleaseVersion'
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - true
                  OldImage:
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - true

  UpdateScheduleV1Logs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${UpdateScheduleV1}
      RetentionInDays: 30

  DeleteScheduleV1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./delete_schedule_v1
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - scheduler:DeleteSchedule
              Resource: !Sub 'arn:aws:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/*/*'
      Events:
        deleted:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - REMOVE
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  OldImage:
                    _item_type:
                      S:
                        - 'WorkflowReleaseVersion'
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - true
        removed:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - MODIFY
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  NewImage:
                    _item_type:
                      S:
                        - 'WorkflowReleaseVersion'
                    source:
                      M:
                        connector_type:
                          S:
                            - anything-but: 'Flexli:CoreV1:Schedule'
                  OldImage:
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - true
        disabled:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref MainTableEventBusName
            InputPath: $.detail
            Pattern:
              detail:
                eventName:
                  - MODIFY
                eventSource:
                  - 'aws:dynamodb'
                dynamodb:
                  NewImage:
                    _item_type:
                      S:
                        - 'WorkflowReleaseVersion'
                    source:
                      M:
                        connector_type:
                          S:
                            - 'Flexli:CoreV1:Schedule'
                    enabled:
                      BOOL:
                        - false
                  OldImage:
                    enabled:
                      BOOL:
                        - true

  DeleteScheduleV1Logs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${DeleteScheduleV1}
      RetentionInDays: 30

