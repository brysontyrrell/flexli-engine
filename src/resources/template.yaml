AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:

  LogLevel:
    Type: String

  SharedLayerArn:
    Type: String

  DefaultKeyId:
    Type: String

Globals:

  Function:
    Architectures:
      - arm64
    Runtime: python3.10
    MemorySize: 512
    Handler: app.lambda_handler
    Tracing: Active
    Layers:
      - !Ref SharedLayerArn
      - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:47
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel
        MAIN_TABLE_NAME: !Ref MainTable
        EVENTS_QUEUE_URL: !Ref EventsQueue
        RUN_QUEUE_URL: !Ref RunQueue
        WORKFLOW_HISTORY_V1_TABLE_NAME: !Ref WorkflowHistoryV1Table

Resources:

  MainTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: lsi1pk
          AttributeType: S
        - AttributeName: lsi1sk
          AttributeType: S
        - AttributeName: gsi1pk
          AttributeType: S
        - AttributeName: gsi1sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: gsi1pk
              KeyType: HASH
            - AttributeName: gsi1sk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: LSI1
          KeySchema:
            - AttributeName: lsi1pk
              KeyType: HASH
            - AttributeName: lsi1sk
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - id
              - type
              - schema_version
              - version
              # - revision
              - name
              - description
              - is_release_version
              - context
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  WorkflowHistoryV1Table:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  DataV1Table:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: gsi1sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: pk
              KeyType: HASH
            - AttributeName: gsi1sk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  EventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt EventsDLQueue.Arn
        maxReceiveCount: 1

  EventsDLQueue:
    Type: AWS::SQS::Queue

  EventsProcessorV1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./events_processor_v1
      Timeout: 60
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MainTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt RunQueue.QueueName
      Events:
        poll:
          Type: SQS
          Properties:
            Queue: !GetAtt EventsQueue.Arn
            BatchSize: 100
            MaximumBatchingWindowInSeconds: 5
            FunctionResponseTypes:
              - ReportBatchItemFailures

  EventsProcessorV1Logs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${EventsProcessorV1}
      RetentionInDays: 30

  RunQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt RunDLQueue.Arn
        maxReceiveCount: 1

  RunDLQueue:
    Type: AWS::SQS::Queue

  WorkflowRunnerV1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./workflow_runner_v1
      Timeout: 900
      Environment:
        Variables:
          DATA_V1_TABLE_NAME: !Ref DataV1Table
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MainTable
        - DynamoDBCrudPolicy:
            TableName: !Ref WorkflowHistoryV1Table
        - KMSDecryptPolicy:
            KeyId: !Ref DefaultKeyId
        - SQSSendMessagePolicy:
            QueueName: !GetAtt RunQueue.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt EventsQueue.QueueName
      Events:
        poll:
          Type: SQS
          Properties:
            Queue: !GetAtt RunQueue.Arn
            BatchSize: 1
            FunctionResponseTypes:
              - ReportBatchItemFailures
            # https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax
            # FilterCriteria:
            #   Filters:
            #     - Pattern: "string"
            # ScalingConfig:
            #   MaximumConcurrency: 10

  WorkflowRunnerV1Logs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${WorkflowRunnerV1}
      RetentionInDays: 30

  EventBusLogging:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub /${AWS::StackName}/event-bus-logs

  EventBusLoggingPolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: !Sub EventBridgeToLogsPolicy-${AWS::StackName}-${AWS::Region}
      PolicyDocument: !Sub >
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "EventBridgeToLogsPolicy-${AWS::StackName}-${AWS::Region}",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "delivery.logs.amazonaws.com",
                  "events.amazonaws.com"
                ]
              },
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": ["${EventBusLogging.Arn}"]
            }
          ]
        }

  MainTableEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Ref MainTable

  MainTableStreamPipeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - pipes.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SourcePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: !GetAtt MainTable.StreamArn
        - PolicyName: TargetPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: !GetAtt MainTableEventBus.Arn

  MainTableStreamPipe:
    Type: AWS::Pipes::Pipe
    Properties:
      RoleArn: !GetAtt MainTableStreamPipeRole.Arn
      Source: !GetAtt MainTable.StreamArn
      SourceParameters:
        DynamoDBStreamParameters:
          StartingPosition: LATEST
          BatchSize: 10
#          MaximumBatchingWindowInSeconds: 60
#          DeadLetterConfig:
#            Arn: !GetAtt MainTableStreamPipeDLQueue.Arn
      Target: !GetAtt MainTableEventBus.Arn
#      TargetParameters:
#        EventBridgeEventBusParameters:
#          Source: !Ref MainTable

  MainTableStreamPipeDLQueue:
    Type: AWS::SQS::Queue

  MainTableEventBusLoggingRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref MainTableEventBus
      EventPattern:
        account:
          - !Ref AWS::AccountId
      Targets:
        - Id: CloudwatchLogsTarget
          Arn: !GetAtt EventBusLogging.Arn

Outputs:

  MainTableName:
    Value: !Ref MainTable

  MainTableStreamArn:
    Value: !GetAtt MainTable.StreamArn

  WorkflowHistoryV1TableName:
    Value: !Ref WorkflowHistoryV1Table

  DataV1TableName:
    Value: !Ref DataV1Table

  EventsQueueName:
    Value: !GetAtt EventsQueue.QueueName

  EventsQueueUrl:
    Value: !Ref EventsQueue

  RunQueueName:
    Value: !GetAtt RunQueue.QueueName

  RunQueueUrl:
    Value: !Ref RunQueue

  MainTableEventBusName:
    Value: !Ref MainTableEventBus
